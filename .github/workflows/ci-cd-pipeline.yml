name: CI/CD Pipeline for SAGE

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker and install dependencies
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          sudo docker build -t sage .

      # Step 4: Deploy the application
      - name: Run containers
        run: |
          # Stop and remove any previous containers
          sudo docker stop nginx || true
          sudo docker rm nginx || true
          sudo docker stop app_5001 || true
          sudo docker rm app_5001 || true

          # Start the app container
          sudo docker run -d --name app_5001 -p 5001:5001 -e FLASK_PORT=5001 sage

          # Start NGINX container
          sudo docker run -d --name nginx -p 80:80 -v $(pwd)/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro nginx

      # Step 5: Run the auto-scaler script in the background
      - name: Run auto-scaler script in background
        run: |
          # Stop any existing scaler process to avoid conflict
          sudo pkill -f auto_scaler.py || true

          # Run auto-scaler script in the background and redirect output to scaler.log
          nohup sudo python3 auto_scaler.py > scaler.log 2>&1 &

          # Verify the process is running
          ps aux | grep auto_scaler.py

      # Step 6: Monitor deployment (Optional: Add more checks here if needed)
      - name: Monitor deployment
        run: |
          # Check if containers are running correctly
          docker ps
          
          # Tail logs to monitor auto-scaler
          tail -f scaler.log
